import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
import { RootState, AppDispatch, AppThunk } from "../store";
import axios from "axios";

interface MenuItemInter {
  id: number;
  label: string;
  path: string;
  icon: string;
  type?: string;
  children?: any;
}

export interface MenuState {
  menuList: MenuItemInter[];
}

const initialState: MenuState = {
  menuList: [],
};

export const getMenuListAsync = createAsyncThunk(
  "menu/getMenuList",
  async () => {
    const res = await axios.get("/menu/");
    // The value we return becomes the `fulfilled` action payload
    return res.data.data;
  }
);

export const MenuSlice = createSlice({
  name: "menu",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(getMenuListAsync.fulfilled, (state, action) => {
      state.menuList = action.payload;
    });
    builder.addCase(getMenuListAsync.rejected, (state, action) => {
      console.log("rejected");
      throw Error("token is not authenticated");
    });
  },
});

// !!!CAUTION!!! select中state后面要接reducer名，而不是slice名
export const selectMenuList = (state: RootState) => state.menuReducer.menuList;

export default MenuSlice.reducer;
